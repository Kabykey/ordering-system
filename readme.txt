#  Ordering System

## Описание
Система онлайн-заказов для ресторана, разработанная на Django REST Framework. Поддерживает управление заказами, аутентификацию пользователей с ролями (User, Admin), кэширование и логирование действий.

## Требования
- Python 3.8+
- Django 4.0+
- Django REST Framework
- Redis (для кэширования)

## Установка

1. **Клонируйте репозиторий:**
   ```bash
   git clone <URL-репозитория>
   cd <название-проекта>
   ```

2. **Создайте виртуальное окружение и активируйте его:**
   ```bash
   python -m venv venv
   source venv/bin/activate  # Для Linux/macOS
   venv\Scripts\activate    # Для Windows
   ```

3. **Установите зависимости:**
   ```bash
   pip install -r requirements.txt
   ```

4. **Примените миграции:**
   ```bash
   python manage.py makemigrations
   python manage.py migrate
   ```

5. **Создайте суперпользователя:**
   ```bash
   python manage.py createsuperuser
   ```

6. **Запустите сервер разработки:**
   ```bash
   python manage.py runserver
   ```

## Запуск Redis (для кэширования)
Убедитесь, что Redis установлен и запущен:
```bash
redis-server
```

## Эндпоинты API

### Аутентификация
- **POST** `/login/` — Получение токена по логину и паролю.

### Управление заказами
- **POST** `/orders/` — Создание заказа.
- **GET** `/orders/` — Получение списка заказов (фильтры: `status`, `min_price`, `max_price`).
- **GET** `/orders/<id>/` — Получение конкретного заказа.
- **PATCH** `/orders/<id>/` — Обновление заказа.
- **DELETE** `/orders/<id>/` — Мягкое удаление заказа.

## Пользовательские роли
- **User** — может создавать, просматривать и обновлять свои заказы.
- **Admin** — полный доступ ко всем операциям.

## Логирование
Логи записываются в файл `logs/app.log`. Фиксируются все операции по созданию, обновлению и удалению заказов.

## Кэширование
Заказы кэшируются в Redis. Кэш обновляется или удаляется при изменении статуса заказа.

## Дополнительно
- Панель администратора доступна по адресу `/admin/`

## Лицензия
Проект распространяется под MIT License.

